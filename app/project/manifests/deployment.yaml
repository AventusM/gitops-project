apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-node
  template:
    metadata:
      labels:
        app: kube-node
    spec:
      volumes:
        - name: shared-text
          persistentVolumeClaim:
            claimName: logs-claim
      containers:
        - name: kube-node-gateway
          image: PROJECT/GATEWAYIMAGE
          imagePullPolicy: Always
          env:
          - name: DEPLOYMENT_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          volumeMounts:
            - name: shared-text
              mountPath: /public
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
               path: /healthz
               port: 3002 # CONNECTS TO THE BACKEND --> HAS TO SHARE THE PORT FOR SOME REASON
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            httpGet:
               path: /healthz
               port: 3002 # CONNECTS TO THE BACKEND --> HAS TO SHARE THE PORT FOR SOME REASON
        - name: kube-node-backend
          image: PROJECT/BACKENDIMAGE
          imagePullPolicy: Always
          envFrom:
          - secretRef:
              name: postgres-credentials # replace with bad-credentials to test for exercise 4.02
          env:
            - name: NATS_URL
              value: nats://my-nats:4222
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            httpGet:
               path: /healthz
               port: 3002
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            httpGet:
               path: /healthz
               port: 3002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broadcaster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broadcaster
  template:
    metadata:
      labels:
        app: broadcaster
    spec:
      containers:
        - name: broadcaster
          image: PROJECT/BROADCASTERIMAGE
          imagePullPolicy: Always
          env:
            - name: NATS_URL
              value: nats://my-nats:4222
          envFrom:
            - secretRef:
                name: telegram-bot